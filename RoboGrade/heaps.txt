-------------------
CSE247 Robot tester starts testing heaps on 2017-10-01 19:53:41 -0500

========
Testing in ./GradingRepos/repos/cse247-f17-students-aradhak: heaps as of 2017-09-28 12:30
========
Now in: /Users/tdelanuez/247f17/cse247-support/GradingRepos/repos/cse247-f17-students-aradhak
Your branch is up-to-date with 'origin/master'.
HEAD is now at 9fb3cd2 lab3
Saved working directory and index state WIP on master: 9fb3cd2 lab3
HEAD is now at 9fb3cd2 lab3

Already up-to-date.
Going back in time to: 2017-09-28 12:30
At hash 9fb3cd2effbf0614c843790d15daf3c86b23a3d3

Buildfile: /Users/tdelanuez/247f17/cse247-support/build.xml

copytest:
     [echo] would copy from /Users/roncytron/git/cse247-f17-students key aradhak testfilesource test/TestMinHeap package heaps repo ./GradingRepos/repos/cse247-f17-students-aradhak
Compiling the code
Buildfile: /Users/tdelanuez/247f17/cse247-support/build.xml

compile:
     [echo] Compiling heaps/MinHeap
    [mkdir] Created dir: /Users/tdelanuez/247f17/cse247-support/GradingRepos/repos/cse247-f17-students-aradhak/bin
    [javac] Compiling 1 source file to /Users/tdelanuez/247f17/cse247-support/GradingRepos/repos/cse247-f17-students-aradhak/bin

BUILD SUCCESSFUL
Total time: 1 second
Buildfile: /Users/tdelanuez/247f17/cse247-support/build.xml

compile:
     [echo] Compiling heaps/test/TestMinHeap
    [javac] Compiling 1 source file to /Users/tdelanuez/247f17/cse247-support/GradingRepos/repos/cse247-f17-students-aradhak/bin

BUILD SUCCESSFUL
Total time: 1 second
Running test test.TestMinHeap
Buildfile: /Users/tdelanuez/247f17/cse247-support/build.xml

test:
    [junit] Running heaps.test.TestMinHeap
    [junit] Testsuite: heaps.test.TestMinHeap
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                1                                                               3                               
    [junit]                10                              2                               6                               14              
    [junit]        20              19              5               4               17              11              32              26      
    [junit]    29      22      41      23      8       13      9       7       21      18      44      16      37      49      43      36  
    [junit]  48  47  30  27  46  45  40  31  42  39  35  34  28  15  38  12  33  24  25
    [junit] 
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.575 sec
    [junit] Output:
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                1                                                               3                               
    [junit]                10                              2                               6                               14              
    [junit]        20              19              5               4               17              11              32              26      
    [junit]    29      22      41      23      8       13      9       7       21      18      44      16      37      49      43      36  
    [junit]  48  47  30  27  46  45  40  31  42  39  35  34  28  15  38  12  33  24  25
    [junit] 
    [junit] 
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.575 sec
    [junit] ------------- Standard Output ---------------
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                1                                                               3                               
    [junit]                10                              2                               6                               14              
    [junit]        20              19              5               4               17              11              32              26      
    [junit]    29      22      41      23      8       13      9       7       21      18      44      16      37      49      43      36  
    [junit]  48  47  30  27  46  45  40  31  42  39  35  34  28  15  38  12  33  24  25
    [junit] 
    [junit] ------------- ---------------- ---------------
    [junit] 
    [junit] Testcase: testViaSorting took 0.02 sec
    [junit] Testcase: testEmptyHeap took 0 sec
    [junit] Testcase: testAndPrint took 0.072 sec
    [junit] Testcase: testExtractMin took 0.141 sec
    [junit] Testcase: testLocUpdatedHeapify took 0.001 sec
    [junit] Testcase: testInsert took 0.061 sec
    [junit] Testcase: testUsingHeapSort took 2.253 sec
    [junit] Testcase: testLocUpdatedDecrease took 0 sec

BUILD SUCCESSFUL
Total time: 3 seconds
================
Lab is counted as working
================

CSE247 Robot tester ends testing heaps on 2017-10-01 19:53:53 -0500
-------------------
